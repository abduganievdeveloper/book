{"version":3,"sources":["MyComponents/Navbar/Navbar.js","MyComponents/Navbar/index.js","MyComponents/Login/Login.js","MyComponents/Login/index.js","views/Welcome.js","App.js","serviceWorker.js","index.js"],"names":["brHeight","window","innerHeight","styles","content","maxHeight","marginBottom","backgroundColor","padding","paddingLeft","Navbar","withStyles","props","classes","react_default","a","createElement","index_es","className","position","variant","component","color","appHeight","Login","theme","root","marginTop","textAlign","width","marginLeft","marginRight","height","img","maxWidth","paper","_useState","useState","_useState2","Object","slicedToArray","status","changeStatus","_useState3","nickname","firstname","lastname","exp","about","password","_useState4","regInfo","changeRegInfo","_useState5","_useState6","signInfo","changeSignInfo","regInfoCollect","e","target","name","objectSpread","value","pasword","signInfoCollect","statusChange","preventDefault","container","item","md","align","gutterBottom","spacing","xs","src","react_addons_css_transition_group_default","transitionName","transitionEnterTimeout","transitionLeaveTimeout","transitionAppear","transitionAppearTimeout","onChange","fullWidth","style","type","onClick","console","log","inline","href","Welcome","MyComponents_Login","main","react","MyComponents_Navbar","react_router_dom","basename","react_router","path","exact","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e820d365.chunk.js","sourcesContent":["import React from 'react'\r\nimport {AppBar, Typography} from '@material-ui/core'\r\nimport withStyles from '@material-ui/core/styles/withStyles'\r\n\r\nconst brHeight=window.innerHeight>700?window.innerHeight:700\r\nconst styles={\r\n    content:{\r\n        maxHeight:brHeight*0.1,\r\n        marginBottom:brHeight*0.05,\r\n        backgroundColor:\"#45aaf2\",\r\n        padding:'15px',\r\n        paddingLeft:\"10%\"\r\n    }\r\n}\r\n\r\nconst Navbar=(props)=>{\r\n    const {classes}=props;\r\n    return(\r\n        <AppBar className={classes.content} position=\"sticky\" >\r\n            <Typography variant=\"headline\" component=\"h1\" color=\"inherit\">\r\n                Bookaholic\r\n            </Typography>\r\n        </AppBar>\r\n    )\r\n}\r\nexport default withStyles(styles)(Navbar);","import Navbar from './Navbar.js'\r\nexport default Navbar;","import React,{useState} from 'react'\r\nimport {Input, Paper, Typography, Grid, Fab, InputLabel} from '@material-ui/core'\r\nimport withStyles from '@material-ui/core/styles/withStyles'\r\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group'\r\n\r\n\r\n//Style\r\nconst appHeight=window.innerHeight*0.8;\r\nconst styles = theme => ({\r\n    root: {\r\n      marginTop:\"30px\",\r\n      textAlign:\"center\",\r\n      width:\"90%\",\r\n      marginLeft:\"auto\",\r\n      marginRight:\"auto\",\r\n      maxHeight:appHeight,\r\n      height:appHeight,\r\n      color:\"white\"\r\n    },\r\n    img:{\r\n      maxWidth:\"100%\"\r\n    },\r\n    paper:{\r\n      padding:\"40px\",\r\n      textAlign:\"left\"\r\n    }\r\n});\r\n\r\n//Component\r\n\r\nconst Login=(props)=>{\r\n   \r\n    const {classes}=props\r\n    \r\n    const [status, changeStatus]=useState('signin')\r\n    const [regInfo, changeRegInfo]=useState({\r\n      nickname:'',\r\n      firstname:'',\r\n      lastname:'',\r\n      exp:'',\r\n      about:'',\r\n      password:''\r\n    })\r\n\r\n    const [signInfo, changeSignInfo]=useState({\r\n      nickname:'',\r\n      password:''\r\n    })\r\n\r\n    const regInfoCollect=(e)=>{\r\n      switch(e.target.name){\r\n        case 'nickname':{\r\n          changeRegInfo({...regInfo, nickname:e.target.value}) \r\n          break\r\n        }\r\n        case 'firstname':{\r\n          changeRegInfo({...regInfo, firstname:e.target.value}) \r\n          break\r\n        }\r\n        case 'lastname':{\r\n          changeRegInfo({...regInfo, lastname:e.target.value}) \r\n          break\r\n        }\r\n        case 'exp':{\r\n          changeRegInfo({...regInfo, exp:e.target.value}) \r\n          break\r\n        }\r\n        case 'about':{\r\n          changeRegInfo({...regInfo, about:e.target.value}) \r\n          break\r\n        }\r\n        case 'password':{\r\n          changeRegInfo({...regInfo, pasword:e.target.value}) \r\n          break\r\n        }\r\n      }\r\n    }\r\n    const signInfoCollect=(e)=>{\r\n\r\n     \r\n      switch(e.target.name){\r\n       \r\n        case 'nickname':{\r\n          changeSignInfo({...signInfo, nickname:e.target.value}) \r\n          break\r\n        }\r\n        case 'password':{\r\n          changeSignInfo({...signInfo, password:e.target.value}) \r\n          break\r\n        }\r\n      }\r\n    }\r\n    \r\n    const register=()=>{\r\n      console.log(regInfo)\r\n    }\r\n\r\n    const signIn=()=>{\r\n      console.log(signInfo)\r\n    }\r\n\r\n\r\n    const statusChange=(e)=>{\r\n      e.preventDefault()\r\n      e.target.name==\"signin\"?changeStatus('register'):changeStatus('signin')\r\n    }\r\n    return (\r\n      <div>\r\n          <Grid container className={classes.root}>\r\n            <Grid item md={12} >\r\n              <Typography variant=\"display2\" color=\"inherit\" align=\"center\" gutterBottom>Bookaholic</Typography>\r\n              <Grid container spacing={40}>\r\n                <Grid item md={7} xs={12}>\r\n                  \r\n                    <Typography color=\"inherit\" variant=\"headline\" gutterBottom>\r\n                      Share your books - share your knowledge\r\n                    </Typography>\r\n                    <Paper>\r\n                      <img src=\"/images/group.jpg\" className={classes.img}/>\r\n                    </Paper>\r\n                  \r\n                </Grid>\r\n                <Grid item md={5} xs={12}>\r\n                  {status=='signin'&&<ReactCSSTransitionGroup \r\n                  transitionName=\"rotate\"\r\n                  transitionEnterTimeout={5000}\r\n                  transitionLeaveTimeout={5000}\r\n                  transitionAppear={true}\r\n                  transitionAppearTimeout={5000}\r\n                  ><Paper className={classes.paper} >\r\n                    <Typography variant=\"headline\" gutterBottom align=\"center\" color=\"secondary\">Register</Typography>\r\n                    <InputLabel  variant=\"filled\">Nickname ( remember it you will need it to log in )</InputLabel>\r\n                    <Input name=\"nickname\" onChange={regInfoCollect} fullWidth style={{marginBottom:\"20px\"}}/>\r\n                    <InputLabel  variant=\"filled\">First name</InputLabel>\r\n                    <Input name=\"firstname\" onChange={regInfoCollect} fullWidth style={{marginBottom:\"20px\"}}/>\r\n                    <InputLabel  variant=\"filled\">Last name</InputLabel>\r\n                    <Input name=\"lastname\" onChange={regInfoCollect} fullWidth style={{marginBottom:\"20px\"}}/>\r\n                    <InputLabel  variant=\"filled\">Reading experience ( in years )</InputLabel>\r\n                    <Input name=\"exp\" onChange={regInfoCollect} fullWidth style={{marginBottom:\"20px\"}}/>\r\n                    <InputLabel  variant=\"filled\">Short about you</InputLabel>\r\n                    <Input name=\"about\" onChange={regInfoCollect} fullWidth style={{marginBottom:\"20px\"}}/>\r\n                    <InputLabel  variant=\"filled\">Password</InputLabel>\r\n                    <Input type=\"password\" name=\"password\" onChange={regInfoCollect} fullWidth style={{marginBottom:\"20px\"}}/>\r\n                    <Fab onClick={register} variant=\"extended\" color=\"secondary\">Register</Fab>\r\n                    <Typography color=\"primary\" inline> Have an account already?</Typography>\r\n                    <a href=\"#\" onClick={statusChange} name=\"signin\"> Sign in</a>\r\n                  </Paper></ReactCSSTransitionGroup>}\r\n                  {status=='register'&&<ReactCSSTransitionGroup\r\n                   transitionName=\"rotate\"\r\n                   transitionEnterTimeout={5000}\r\n                   transitionLeaveTimeout={5000}\r\n                   transitionAppear={true}\r\n                   transitionAppearTimeout={5000}\r\n                  ><Paper className={classes.paper}>\r\n                    <Typography variant=\"headline\" gutterBottom align=\"center\" color=\"secondary\">Sign in</Typography>\r\n                    <InputLabel  variant=\"filled\">Nickname ( remember it you will need it to log in )</InputLabel>\r\n                    <Input onChange={signInfoCollect} name=\"nickname\" fullWidth style={{marginBottom:\"20px\"}}/>\r\n                    <InputLabel  variant=\"filled\">Password</InputLabel>\r\n                    <Input onChange={signInfoCollect} name=\"password\" type=\"password\" fullWidth style={{marginBottom:\"20px\"}}/>\r\n                    <Fab variant=\"extended\" color=\"secondary\" onClick={signIn}>Sign in</Fab>\r\n                    <Typography color=\"primary\" inline> Don't have an account? </Typography>\r\n                    <a href=\"\" onClick={statusChange} name=\"register\">Register</a>\r\n                  </Paper></ReactCSSTransitionGroup>}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n     </div>\r\n    );\r\n  }\r\n  \r\n\r\nexport default withStyles(styles)(Login)","import Login from './Login.js'\r\nexport default Login;","import React from 'react'\r\nimport Navbar from '../MyComponents/Navbar'\r\nimport Login from '../MyComponents/Login'\r\n\r\nconst Welcome=()=>{\r\n    return(<div>\r\n        <Login/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Welcome","import React, {Fragment} from 'react';\nimport './App.css';\nimport Welcome from './views/Welcome'\n\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport Navbar from './MyComponents/Navbar'\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\n\nconst styles={\n   main:{\n     padding:'0 15px'\n   }\n}\n\n\nconst App=(props)=>{\n  const {classes}=props\n  return (\n    <Fragment>\n    <Navbar/>\n    <div className={classes.main}>\n      <BrowserRouter basename=\"/book\">\n        <Switch>\n          <Route path=\"/\" component={Welcome} exact/>\n        </Switch>\n      </BrowserRouter>\n      \n    </div>\n    </Fragment>\n  );\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}